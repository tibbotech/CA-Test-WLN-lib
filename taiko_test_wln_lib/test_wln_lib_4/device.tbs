include "global.tbh"


#if SYS_VER = 1000
'----------------------------------------------------------------------------
sub delay_ms(ms as dword)
	dim delay as dword = ms * 3
	while delay > 0
			delay=delay-1
	wend	
end sub

#else
'----------------------------------------------------------------------------
sub delay_ms(ms as dword)
	dim delay as dword
    delay = sys.timercountms
    if delay + ms < delay then 
        delay = delay + ms
        while sys.timercountms < delay
	    wend
    else 
        while sys.timercountms - delay < ms
	    wend
    end if
	
end sub

#endif 


'====================================================================
function connect_to_ap(byref ap_name as string, security_mode as pl_wln_security_modes, byref key as string, domain as pl_wln_domains) as en_wln_status_codes
	dim pmk as string(32)
	wln_init()
#if WLN_WPA
	if wln.getmoduletype = PL_WLN_MODULE_TYPE_GA1000 then 
		if security_mode=WLN_SECURITY_MODE_WPA1 or security_mode=WLN_SECURITY_MODE_WPA2 then 				
			if stg_get("APN",0)<>ap_name or stg_get("PW",0)<>key or stg_sg("PMK",0,pmk,EN_STG_GET)<>EN_STG_STATUS_OK then
				'recalculate the key
				pmk=wln_wpa_mkey_get(key,ap_name)
				stg_set("PMK",0,pmk)
				stg_set("APN",0,ap_name)
				stg_set("PW",0,key)
			else
				pmk=stg_get("PMK",0) 'the key stays the same
			end if			
		end if
	else
		pmk=key
	end if
#else
	pmk=key
#endif
	
#if SRC_LIB_VER < &h020003
	connect_to_ap=wln_start(ap_name,security_mode,pmk,domain)
#endif

#if SRC_LIB_VER >= &h020003
	connect_to_ap=wln_start(ap_name,security_mode,pmk,domain,YES,PL_WLN_ASCAN_INFRASTRUCTURE)
#endif

end function

sub detect_module_type()

	if stg_get("MT",0)=0 then
	
		wln.csmap=WLN_CS
		io.num=WLN_CS
		io.enabled=YES
		wln.dimap=WLN_DI
		wln.domap=WLN_DO
		io.num=WLN_DO
		io.enabled=YES
		wln.clkmap=WLN_CLK
		io.num=WLN_CLK
		io.enabled=YES
		io.num=WLN_RST
		io.enabled=YES
		wln.disable
		'reset Wi-Fi module
		#if WLN_RESET_MODE 
			'reset is controlled by the combination of CS and CLK
			io.lineset(wln.csmap,HIGH)
			io.lineset(wln.clkmap,LOW)
			io.lineset(wln.clkmap,HIGH)
		#else	
			'there is a dedicated reset line
			io.num=WLN_RST
			io.state=LOW
			delay_ms(1)
			io.state=HIGH
		#endif
		
		stg_set("MT",0,wln.getmoduletype)
	
	end if
	
end sub

'--------------------------------------------------------------------
sub callback_wln_ok()
	pat.play("G~",PL_PAT_CANINT)
end sub

'--------------------------------------------------------------------
sub callback_wln_failure(wln_state as en_wln_status_codes)
	pat.play("-",PL_PAT_CANINT)
	sock.num=tcp_sock
	sock.discard
end sub

'--------------------------------------------------------------------
sub callback_wln_pre_buffrq(required_buff_pages as byte)
end sub

'--------------------------------------------------------------------
sub callback_wln_rescan_result(current_rssi as byte, scan_rssi as byte, different_ap as no_yes)
	dim s as string(32)

	if different_ap=NO or scan_rssi<current_rssi or scan_rssi-current_rssi<5 then
		exit sub
	end if
	
	select case AP_SECURITY
	case WLN_SECURITY_MODE_DISABLED:
		s=""
	case WLN_SECURITY_MODE_WEP64,WLN_SECURITY_MODE_WEP128:
		s=AP_PASSWORD
	case else:
		s=stg_get("PMK",0)
	end select

	wln_change(AP_NAME,AP_SECURITY,s)
end sub

'--------------------------------------------------------------------
sub callback_wln_mkey_progress_update(progress as byte)
	pat.play("B-**",PL_PAT_CANINT)
end sub

'--------------------------------------------------------------------
sub callback_stg_error(byref stg_name_or_num as string,index as byte,status as en_stg_status_codes)
end sub

'--------------------------------------------------------------------
sub callback_stg_pre_get(byref stg_name_or_num as string,index as byte,byref stg_value as string)
end sub

'--------------------------------------------------------------------
sub callback_stg_post_set(byref stg_name_or_num as string, index as byte,byref stg_value as string)
end sub

'--------------------------------------------------------------------
sub callback_wln_starting_association()
end sub

'--------------------------------------------------------------------
sub callback_wln_rescan_for_better_ap()
end sub